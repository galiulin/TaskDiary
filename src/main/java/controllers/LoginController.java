package controllers;import common.Logged;import db.exceptions.DAOException;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.validation.BindingResult;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import db.pojo.Role;import db.pojo.User;import service.SecurityService;import service.UserService;import validator.UserValidator;@Controllerpublic class LoginController {    @Logged    private Logger logger;    @Autowired    private UserService loginService;    @Autowired    private UserValidator userValidator;    @Autowired    private SecurityService securityService;    @RequestMapping(value = {"/", "/login"}, method = RequestMethod.GET)    public String showLoginPage(Model model, String error, String logout) {        if (error != null) {            model.addAttribute("error", "Username or password is incorrect.");        }        if (logout != null) {            model.addAttribute("message", "Logged out seccessfully.");        }        return "login";    }    @RequestMapping(value = "/registration", method = RequestMethod.GET)    public String registration(Model model) {        model.addAttribute("userForm", new User());        return "registration";    }    @RequestMapping(value = "/registration", method = RequestMethod.POST)    public String registration(@ModelAttribute("userForm") User userForm, BindingResult bindingResult, Model model) {        userForm.setRole(Role.ROLE_WORKER); //по умолчанию роль работника        userValidator.validate(userForm, bindingResult);        if (bindingResult.hasErrors()) {            return "registration";        }        try {            loginService.saveUser(userForm);        } catch (DAOException e) {            logger.error(e.getMessage(), e);            return "redirect:/plug";        }        securityService.autoLogin(userForm.getLogin(), userForm.getConfirmPassword());        return "redirect:/dashboard";    }}