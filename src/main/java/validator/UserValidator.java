package validator;import dao.DAOException;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;import org.springframework.validation.Errors;import org.springframework.validation.ValidationUtils;import org.springframework.validation.Validator;import pojo.User;import service.UserService;/** * Validator for {@link pojo.User} class, * implements {@link Validator} interface. */@Componentpublic class UserValidator implements Validator {    private Logger logger = Logger.getLogger(UserValidator.class);    @Autowired    private UserService userService;    @Override    public boolean supports(Class<?> clazz) {        return User.class.equals(clazz);    }    @Override    public void validate(Object o, Errors errors) {        User user = (User) o;        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "username", "Required");        /*если имя пользователя выходит за пределы*/        if (user.getLogin().length() < 5 || user.getLogin().length() > 32) {            errors.rejectValue("username", "Size.userForm.userName");        }        /*если такой пользователь есть в базе данных         * то такое значение не принимаем*/        try {            if (userService.getUserByLogin(user.getLogin()) != null) {                errors.rejectValue("username", "Duplicate.userForm.username");            }        } catch (DAOException e) {            logger.warn(e.getMessage(), e);            /*fixme определиться с тем как обработать этот exception*/        }        /*если длина пароля выходит за пределы*/        ValidationUtils.rejectIfEmptyOrWhitespace(errors, "password", "Required");        if (user.getPassword().length() < 5 || user.getPassword().length() > 32) {            errors.rejectValue("password", "Size.userForm.password");        }        /*если пароли не совпадают*/        if (!user.getConfirmPassword().equals(user.getPassword())) {            errors.rejectValue("password", "Difference.userForm.password");        }    }}